plugins {
	alias libs.plugins.kotlinJvm
	id 'maven-publish'
}

def projectVersion = getEnv('VERSION', 'latest')

group = 'pl.jwizard'
version = projectVersion

ext {
	jvmSpecification = 17
}

repositories {
	mavenCentral()
}

dependencies {
	// this dependencies should be visible in related repositories
	api libs.dotEnv
	api libs.hikariCp
	api libs.jacksonDatabind
	api libs.jacksonDataformatYaml
	api libs.jacksonKotlin
	api libs.jacksonJsr310
	api libs.javalin
	api libs.jdbi
	api libs.jdbiKotlin
	api libs.jeeAnnotationApi
	api libs.mysqlConnector
	api libs.springContext
	api libs.springVault

	// this dependencies are used only in this library
	implementation libs.commonsVfs
	implementation libs.kotlin
	implementation libs.kotlinReflect
	implementation libs.slf4jApi
}

tasks.register('sourcesJar', Jar) {
	archiveClassifier = 'sources'
	from sourceSets.main.allSource
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId = group
			artifactId = 'jwizard-lib'
			version = projectVersion

			from components.java
			artifact tasks.sourcesJar

			pom {
				name = 'JWizard library'
				url = "https://docs.jwizard.pl/jwl"
				licenses {
					license {
						name = 'The AGPL-3.0 License'
						url = 'https://www.gnu.org/licenses/agpl-3.0.en.html'
					}
				}
				developers {
					developer {
						id = 'milosz08'
						name = 'Mi≈Çosz Gilga'
						email = 'personal@miloszgilga.pl'
					}
				}
				scm {
					connection = 'scm:git:git://github.com/jwizard-bot/jwizard-lib.git'
					developerConnection = 'scm:git:ssh://github.com/jwizard-bot/jwizard-lib.git'
					url = "https://docs.jwizard.pl/jwl"
				}
			}
		}
	}
	repositories {
		maven {
			name = 'jwizardRepository'
			url = uri("https://m2.miloszgilga.pl/private")
			credentials {
				username = getEnv("MAVEN_NAME")
				password = getEnv("MAVEN_SECRET")
			}
		}
	}
}

kotlin {
	jvmToolchain(rootProject.ext.jvmSpecification.toInteger())
}

// retrieves the value of an environment variable, with a fallback to a default value
static def getEnv(String name, Object defValue = '') {
	return System.getenv("JWIZARD_$name") ?: defValue.toString()
}
