name: Release new version

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Determinate revision tag
        id: revision
        run: |
          echo "revision_tag=${REVISION_TAG:1}" >> "$GITHUB_OUTPUT"
        env:
          REVISION_TAG: ${{ github.ref_name }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Clean build directory
        run: ./gradlew clean --no-daemon

      - name: Publish artifact
        run: ./gradlew publish --no-daemon
        env:
          JWIZARD_VERSION: ${{ steps.revision.outputs.revision_tag }}
          JWIZARD_MAVEN_NAME: ${{ secrets.JWIZARD_LIB_MAVEN_NAME }}
          JWIZARD_MAVEN_SECRET: ${{ secrets.JWIZARD_LIB_MAVEN_SECRET }}

  generate-docs:
    runs-on: ubuntu-latest
    needs: publish

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Determinate revision tag
        id: revision
        run: |
          echo "revision_tag=${REVISION_TAG:1}" >> "$GITHUB_OUTPUT"
        env:
          REVISION_TAG: ${{ github.ref_name }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Generate KDoc documentation
        run: ./gradlew dokkaHtml --no-daemon
        env:
          JWIZARD_VERSION: ${{ steps.revision.outputs.revision_tag }}

      - name: Copy generated content on server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: docs/*
          target: /var/www/jwizard-docs/jwl
          rm: true
          strip_components: 1

  release:
    runs-on: ubuntu-latest
    needs: generate-docs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Push repository tags
        run: git push --tags

      - name: Determinate tags range
        run: |
          tags_range=$(current=${{ github.ref_name }} \
            && prev=$(git describe --tags --abbrev=0 "$current"^ 2>/dev/null) \
            && [ -n "$prev" ] && echo "$prev..$current" || echo "$current")
          echo "tags_range=$tags_range" >> $GITHUB_ENV

      - name: Generate Changelog
        run: |
          echo "### Changes" >> changelog.md
          git log --oneline --no-merges --pretty=format:"* %h - %s" $tags_range >> changelog.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body_path: changelog.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
