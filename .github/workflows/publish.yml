name: Release new version

on:
  push:
    branches:
      - master
    paths:
      - ".github/workflows/**"
      - "dokka/**"
      - "gradle/libs.versions.toml"
      - "src/**"
      - "build.gradle"
      - "gradle.properties"
      - "settings.gradle"
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Clean build directory
        run: ./gradlew clean --no-daemon

      - name: Publish artifact
        run: ./gradlew publish --no-daemon
        env:
          JWIZARD_MAVEN_NAME: ${{ secrets.MVN_LIB_PUBLISHER_NAME }}
          JWIZARD_MAVEN_SECRET: ${{ secrets.MVN_LIB_PUBLISHER_SECRET }}

  generate-docs:
    runs-on: ubuntu-latest
    needs: publish

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Determinate build version
        id: version
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Generate KDoc documentation
        run: ./gradlew dokkaHtml --no-daemon
        env:
          JWIZARD_VERSION: ${{ steps.version.outputs.sha_short }}

      - name: Copy generated content on server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: docs/*
          target: /var/www/jwizard-docs/jwl
          rm: true
          strip_components: 1

  run-tools:
    runs-on: ubuntu-latest
    needs: publish

    steps:
      - name: Checkout tools repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/jwizard-tools
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install requirements
        run: pip install -r requirements.txt

      - name: Run packages grabber
        run: exec/run packages_grabber "${{ secrets.CONFIG_FILE_CONTENT }}" --repo="${{ github.repository }}"
